# Generated by Django 3.1.13 on 2022-02-23 10:31

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('seller', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('email', models.EmailField(max_length=254)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('password', models.CharField(max_length=200)),
                ('phone_number', models.IntegerField(help_text='Enter 10 digits phone number', unique=True, verbose_name='Phone Number')),
                ('is_verified', models.BooleanField(default=False)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('last_logout', models.DateTimeField(blank=True, null=True)),
                ('country_code', models.IntegerField(default=91)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Others', 'Others')], max_length=15)),
                ('address_line_1', models.CharField(max_length=200)),
                ('address_line_2', models.CharField(max_length=200)),
                ('profile_pic', models.ImageField(upload_to='customer/profile_image')),
                ('otp', models.CharField(max_length=200)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('zip_code', models.CharField(max_length=100)),
                ('is_user_blocked', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.CharField(max_length=500)),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
            ],
        ),
        migrations.CreateModel(
            name='Combo_product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Concern',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
            ],
        ),
        migrations.CreateModel(
            name='Gift',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('Custom', 'Custom'), ('Standard', 'Standard')], max_length=100)),
                ('name', models.CharField(max_length=200)),
                ('description', models.CharField(max_length=500)),
                ('size', models.CharField(max_length=200)),
                ('color', models.CharField(max_length=200)),
                ('price', models.IntegerField(blank=True, null=True)),
                ('gst_slab', models.CharField(blank=True, choices=[('5%', '5%'), ('12%', '12%'), ('18%', '18%'), ('28%', '28%')], max_length=100, null=True)),
                ('no_of_items', models.IntegerField()),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Ingrediant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
            ],
        ),
        migrations.CreateModel(
            name='Offer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('discount_in_percent', models.CharField(max_length=200)),
                ('discount_in_value', models.CharField(blank=True, max_length=200, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('active', models.BooleanField(default=False)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('weight', models.CharField(max_length=200)),
                ('sku', models.CharField(max_length=100)),
                ('barcode', models.CharField(max_length=200)),
                ('hsn', models.CharField(max_length=200)),
                ('description', models.CharField(max_length=400)),
                ('image1', models.ImageField(upload_to='product/image')),
                ('image2', models.ImageField(default='product.jpg', upload_to='product/image')),
                ('image3', models.ImageField(default='product.jpg', upload_to='product/image')),
                ('image4', models.ImageField(default='product.jpg', upload_to='product/image')),
                ('image5', models.ImageField(default='product.jpg', upload_to='product/image')),
                ('image6', models.ImageField(default='product.jpg', upload_to='product/image')),
                ('currency', models.CharField(blank=True, choices=[('$', '$'), ('Rs', 'Rs')], max_length=100, null=True)),
                ('quantity', models.IntegerField()),
                ('gst_slab', models.CharField(choices=[('5%', '5%'), ('12%', '12%'), ('18%', '18%'), ('28%', '28%')], max_length=200)),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customer.brand')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='customer.category')),
            ],
        ),
        migrations.CreateModel(
            name='Product_colors',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Product_type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
            ],
        ),
        migrations.CreateModel(
            name='Transaction_report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('shipping_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='customer.payment')),
            ],
        ),
        migrations.CreateModel(
            name='Subbrand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('brand_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customer.brand')),
            ],
        ),
        migrations.CreateModel(
            name='Sub_type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('type_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customer.type')),
            ],
        ),
        migrations.CreateModel(
            name='Sub_ingrediant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('ingrediant_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customer.ingrediant')),
            ],
        ),
        migrations.CreateModel(
            name='Sub_concern',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('concern_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customer.concern')),
            ],
        ),
        migrations.CreateModel(
            name='Sub_category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('category_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customer.category')),
            ],
        ),
        migrations.CreateModel(
            name='Shopping_order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('status', models.CharField(blank=True, max_length=100, null=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('product_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='order', to='customer.product')),
            ],
        ),
        migrations.CreateModel(
            name='Shipping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('shipping_charge', models.IntegerField(default=0)),
                ('currency', models.CharField(choices=[('$', '$'), ('Rs', 'Rs')], default='Rs', max_length=100)),
                ('gst_slab', models.CharField(choices=[('CGST/SGST', 'CGST/SCGST'), ('IGST', 'IGST')], default='5%', max_length=100)),
                ('free_shipping', models.BooleanField(default=False)),
                ('from_date', models.DateTimeField(blank=True, null=True)),
                ('to_date', models.DateTimeField(blank=True, null=True)),
                ('payment', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='customer.payment')),
            ],
        ),
        migrations.CreateModel(
            name='Product_discription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=400)),
                ('description', models.CharField(max_length=800)),
                ('how_to_use', models.CharField(max_length=1200)),
                ('benigit', models.CharField(max_length=1000)),
                ('ingrediant_desc', models.CharField(max_length=1200)),
                ('product_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='customer.product')),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='color_id',
            field=models.ManyToManyField(to='customer.Product_colors'),
        ),
        migrations.AddField(
            model_name='product',
            name='combo_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='customer.combo_product'),
        ),
        migrations.AddField(
            model_name='product',
            name='concern',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='customer.concern'),
        ),
        migrations.AddField(
            model_name='product',
            name='customer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='product',
            name='gift_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='customer.gift'),
        ),
        migrations.AddField(
            model_name='product',
            name='ingrediant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='customer.ingrediant'),
        ),
        migrations.AddField(
            model_name='product',
            name='offer_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='customer.offer'),
        ),
        migrations.AddField(
            model_name='product',
            name='product_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='customer.product_type'),
        ),
        migrations.AddField(
            model_name='product',
            name='seller_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='seller.seller'),
        ),
        migrations.AddField(
            model_name='product',
            name='sub_brand',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='customer.subbrand'),
        ),
        migrations.AddField(
            model_name='product',
            name='subcategory',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='customer.sub_category'),
        ),
        migrations.AddField(
            model_name='product',
            name='subconcern',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='customer.sub_concern'),
        ),
        migrations.AddField(
            model_name='product',
            name='subingrediant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='customer.sub_ingrediant'),
        ),
        migrations.AddField(
            model_name='product',
            name='subtype_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='customer.sub_type'),
        ),
        migrations.AddField(
            model_name='product',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='customer.type'),
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedback', models.CharField(max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('customer_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=200)),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('customer_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('product_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='customer.product')),
            ],
        ),
    ]
